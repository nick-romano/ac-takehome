{"version":3,"sources":["store/admin/reducer.js","store/admin/context.js","store/catalog/reducer.js","store/catalog/context.js","store/layout/reducer.js","store/layout/context.js","store/RootContextProvider.js","components/Record.js","components/RecordsContainer.js","store/useRootContext.js","store/admin/hook.js","store/layout/hook.js","store/catalog/hook.js","components/SideMenu.js","components/Shelf.js","components/AppBarBanner.js","components/AddShelfForm.js","components/AddShelfModal.js","components/ChangeUserModal.js","MainPage.js","App.js","index.js"],"names":["reducer","state","action","type","user","Error","initialState","AdminContext","createContext","AdminProvider","children","useReducer","dispatch","Provider","value","shelfIdCounter","id","name","records","Object","entries","reduce","newState","shelfId","concat","recordId","filter","newOrder","splice","oldIndex","record","newIndex","newShelf","oldShelf","index","CatalogContext","CatalogProvider","shelves","adminMenuOpen","menuOpen","sideMenuSelection","shelvesMenuExpanded","addShelfModalOpen","nextPage","changeUserModalOpen","undefined","perPage","LayoutContext","LayoutProvider","RootContextProvider","Record","shelf","ListItem","Card","style","width","CardContent","title","artists","join","label","formats","CardActions","Button","onClick","keys","length","FormControl","minWidth","InputLabel","Select","data-testid","onChange","evt","target","values","map","option","MenuItem","RecordsContainer","handleScroll","List","backgroundColor","height","overflow","component","Paper","elevation","onScroll","Grid","container","item","xs","sm","md","useRootContext","adminContext","useContext","layoutContext","catalogContext","useStyles","makeStyles","theme","root","nested","paddingLeft","spacing","listItem","borderRadius","margin","selected","background","SideMenu","classes","handleSelection","aria-labelledby","className","subheader","ListSubheader","button","clsx","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","Shelf","shelfRecords","find","useState","renaming","setRenaming","inputName","setInputName","handleSubmit","useCallback","Box","display","alignItems","justifyContent","Input","variant","onBlur","onEnter","cursor","marginLeft","minHeight","marginBottom","droppableId","direction","provided","snapshot","ref","innerRef","flexDirection","draggableId","draggableProps","dragHandleProps","placeholder","padding","userMenuButtonItem","textAlign","userMenuButton","fontSize","AppBarBanner","AppBar","position","align","Typography","Shelves","adding","setAdding","preventDefault","onSubmit","marginTop","inputProps","AddShelfModal","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","autoFocus","color","layoutDispatch","adminDispatch","catalogDispatch","React","event","MainPage","setRecords","onDragEnd","result","source","destination","useEffect","fetchData","url","fetch","then","resp","json","oldRecords","releases","release","info","basic_information","format","labels","artist","date","year","pagination","urls","next","Container","e","scrollHeight","scrollTop","clientHeight","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae923792.chunk.js","sourcesContent":["\n\nexport const reducer = (state, action) => {\n    switch(action.type) {\n        case 'setUser':\n            return {\n                ...state,\n                user: action.user\n            }\n        default:\n            throw new Error(\"unknown action dispatched to admin reducer\");\n    }\n}\n","import { createContext, useReducer } from \"react\";\nimport { reducer } from \"./reducer\";\n\n\nexport const initialState = {\n    user: \"blacklight\"\n};\n\nconst AdminContext = createContext(initialState);\n\nconst AdminProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n    \n    return (\n        <AdminContext.Provider\n            value={{\n                ...state,\n                dispatch\n            }}\n        >\n            {children}\n        </AdminContext.Provider>\n    )\n};\n\nexport { AdminProvider, AdminContext };\n\n\n\n\n\n","import { initialState } from \"./context\";\n\n// need to export this for testing purposes;\nexport let shelfIdCounter = 0;\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'createShelf':\n      const id = `shelf-${shelfIdCounter}`;\n      shelfIdCounter++;\n      return {\n        ...state,\n        [id]: {\n          id,\n          name: action.name,\n          records: [],\n        },\n      };\n    case 'deleteShelf':\n      return Object.entries(state).reduce((newState, [id, value]) => {\n        if (id !== action.id) {\n          newState[id] = value;\n        }\n        return newState;\n      }, {});\n    case 'renameShelf':\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          name: action.name,\n        },\n      };\n    case 'addRecordToShelf':\n      return {\n        ...state,\n        [action.shelfId]: {\n          // NOTE: I think there should be a set\n          // convention on 'shelfId' or 'id' in actions\n          ...state[action.shelfId],\n          records: state[action.shelfId].records.concat(action.recordId),\n        },\n      };\n    case 'removeRecordFromShelf':\n      return {\n        ...state,\n        [action.shelfId]: {\n          ...state[action.shelfId],\n          records: state[action.shelfId].records.filter(\n            id => id !== action.recordId,\n          ),\n        },\n      };\n    case 'reorderInShelf':\n      const newOrder = [...state[action.shelfId].records];\n      const [record] = newOrder.splice(action.oldIndex, 1);\n      newOrder.splice(action.newIndex, 0, record);\n      return {\n        ...state,\n        [action.shelfId]: {\n          ...state[action.shelfId],\n          records: newOrder,\n        },\n      };\n    case 'moveBetweenShelves':\n      const newShelf = [...state[action.newShelf].records];\n      newShelf.splice(\n        action.newIndex,\n        0,\n        state[action.oldShelf].records[action.oldIndex],\n      );\n\n      return {\n        ...state,\n        [action.oldShelf]: {\n          ...state[action.oldShelf],\n          records: state[action.oldShelf].records.filter(\n            (record, index) => index !== action.oldIndex,\n          ),\n        },\n        [action.newShelf]: {\n          ...state[action.newShelf],\n          records: newShelf,\n        },\n      };\n      case 'resetState': \n        return initialState\n\n    default:\n      throw new Error();\n  }\n};\n","import { createContext, useReducer } from \"react\";\nimport { reducer } from \"./reducer\";\n\nexport const initialState = {  \n};\n\nconst CatalogContext = createContext(initialState); \n\nconst CatalogProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <CatalogContext.Provider\n            value={{\n                shelves: state,\n                dispatch\n            }}\n        >\n            {children}\n        </CatalogContext.Provider>\n    )\n\n};\n\nexport { CatalogContext, CatalogProvider };","\nexport const reducer = (state, action) => {\n    switch(action.type) {\n        case \"setAdminMenuOpen\":\n            return {\n                ...state,\n                adminMenuOpen: action.menuOpen\n            }\n        case \"setSideMenuSelection\": {\n            return {\n                ...state,\n                sideMenuSelection: action.id\n            }\n        }\n        case \"setShelvesMenuExpanded\":\n            return {\n                ...state,\n                shelvesMenuExpanded: action.shelvesMenuExpanded\n            }\n        case \"setAddShelfModalOpen\":\n            return {\n                ...state,\n                addShelfModalOpen: action.addShelfModalOpen\n            }\n        case \"setNextPage\":\n            return {\n                ...state,\n                nextPage: action.nextPage\n            }\n        case \"setChangeUserModalOpen\":\n            return {\n                ...state,\n                changeUserModalOpen: action.changeUserModalOpen\n            }\n        default:\n            throw new Error(\"Unknown action type provided to admin reducer\");\n    }\n}\n\n","import { createContext, useReducer } from \"react\";\nimport { reducer } from \"./reducer\";\n\n\nexport const initialState = {\n    adminMenuOpen: false,\n    shelvesMenuExpanded: true,\n    sideMenuSelection: undefined,\n    addShelfModalOpen: false,\n    perPage: 25,\n    nextPage: undefined,\n    changeUserModalOpen: false\n};\n\nconst LayoutContext = createContext(initialState);\n\nconst LayoutProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n    \n    return (\n        <LayoutContext.Provider\n            value={{\n                ...state,\n                dispatch\n            }}\n        >\n            {children}\n        </LayoutContext.Provider>\n    )\n};\n\nexport { LayoutProvider, LayoutContext };\n\n\n\n\n\n","import { AdminProvider } from \"./admin/context\";\nimport { CatalogProvider } from \"./catalog/context\";\nimport { LayoutProvider } from \"./layout/context\";\n\nconst RootContextProvider = ({ children }) => (\n    <AdminProvider>\n        <LayoutProvider>\n            <CatalogProvider>\n                {children}\n            </CatalogProvider>\n        </LayoutProvider>\n    </AdminProvider>\n);\n\nexport default RootContextProvider;","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  FormControl,\n  InputLabel,\n  ListItem,\n  MenuItem,\n  Select,\n} from '@material-ui/core';\n\nexport default function Record({ record, shelf, shelves, dispatch }) {\n  return (\n    <ListItem key={record.id}>\n      <Card style={{ width: '260px' }}>\n        <CardContent>\n          <p>Title: {record.title}</p>\n          <p>Artist(s):{record.artists.join(', ')}</p>\n          <p>Label: {record.label}</p>\n          <p>Formats: {record.formats.join(', ')}</p>\n        </CardContent>\n\n        <CardActions>\n          {shelf ? (\n            <Button\n              onClick={() =>\n                dispatch({\n                  type: 'removeRecordFromShelf',\n                  shelfId: shelf.id,\n                  recordId: record.id,\n                })\n              }\n            >\n              Remove\n            </Button>\n          ) : Object.keys(shelves).length ? (\n            <FormControl style={{ minWidth: '120px' }}>\n              <InputLabel>Add to shelf</InputLabel>\n              <Select\n                data-testid=\"add-shelf\"\n                value=\"\"\n                onChange={evt =>\n                  dispatch({\n                    type: 'addRecordToShelf',\n                    shelfId: evt.target.value,\n                    recordId: record.id,\n                  })\n                }\n              >\n                {Object.values(shelves).map(option => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          ) : null}\n        </CardActions>\n      </Card>\n    </ListItem>\n  );\n}\n\n","import { List, Grid, Paper } from '@material-ui/core';\n\nimport Record from './Record';\n\nexport default function RecordsContainer({ handleScroll, records, shelves, dispatch }) {\n  return (\n    <>\n      <h2>Records</h2>\n      <List\n        style={{\n          backgroundColor: '#f5f5f5',\n          height: 'calc(100vh - 12rem)',\n          overflow: 'scroll',\n        }}\n        component={Paper}\n        elevation={0}\n        onScroll={handleScroll}\n      >\n        <Grid container>\n        {records.map(record => (\n          <Grid item xs={6} sm={6} md={4} key={record.id}>\n            <Record\n              record={record}\n              shelves={shelves}\n              dispatch={dispatch}\n            />\n          </Grid>\n        ))}\n        </Grid>\n      </List>\n    </>\n  );\n}\n","import { useAdminContext } from './admin/hook';\nimport { useCatalogContext } from './catalog/hook';\nimport { useLayoutContext } from './layout/hook';\n\nconst useRootContext = () => ({\n    adminContext: useAdminContext(),\n    layoutContext: useLayoutContext(),\n    catalogContext: useCatalogContext()\n})\n\nexport default useRootContext;\n","import { useContext } from 'react';\nimport { AdminContext } from './context';\n\nexport const useAdminContext = () => useContext(AdminContext);\n","import { useContext } from 'react';\nimport { LayoutContext } from './context';\n\nexport const useLayoutContext = () => useContext(LayoutContext);\n","import { useContext } from 'react';\nimport { CatalogContext } from './context';\n\nexport const useCatalogContext = () => useContext(CatalogContext);","import {\n    ListSubheader, List, ListItem, ListItemIcon, ListItemText,\n    Collapse, makeStyles\n} from \"@material-ui/core\";\nimport AlbumIcon from '@material-ui/icons/Album';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport PermMediaIcon from '@material-ui/icons/PermMedia';\nimport AddIcon from '@material-ui/icons/Add';\nimport useRootContext from '../store/useRootContext';\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100%'\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n    listItem: {\n        borderRadius: 40,\n        margin: theme.spacing(1)\n    },\n    selected: {\n        background: \"#add8e647\",\n    }\n}));\n\nconst SideMenu = () => {\n    const { catalogContext, layoutContext } = useRootContext();\n    const classes = useStyles();\n\n    const handleSelection = ({ id }) => {\n        layoutContext.dispatch({\n            type: \"setSideMenuSelection\",\n            id\n        });\n    }\n\n    const handleShelvesExpandClick = () => {\n        layoutContext.dispatch({\n            type: \"setShelvesMenuExpanded\",\n            shelvesMenuExpanded: !layoutContext.shelvesMenuExpanded\n        })\n    };\n\n    const handleAddNewShelfClick = () => {\n        layoutContext.dispatch({\n            type: \"setAddShelfModalOpen\",\n            addShelfModalOpen: true\n        });\n    }\n\n    return (\n        <List\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n            className={classes.root}\n            subheader={\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                    Catalog\n                </ListSubheader>\n            }\n        >\n            <ListItem \n                button\n                className={clsx(!layoutContext.sideMenuSelection && classes.selected, classes.listItem)} \n                onClick={handleSelection}\n            >\n                <ListItemIcon>\n                    <AlbumIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Records\"/>\n            </ListItem>\n            <ListItem button onClick={handleShelvesExpandClick} className={clsx(classes.listItem)}>\n                <ListItemIcon>\n                    <PermMediaIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Shelves\" />\n                {layoutContext.shelvesMenuExpanded ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={layoutContext.shelvesMenuExpanded} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    {\n                        Object.values(catalogContext.shelves).map(shelf => (\n                                <ListItem \n                                    button \n                                    className={clsx(layoutContext.sideMenuSelection === shelf.id && classes.selected, classes.nested, classes.listItem)}\n                                    key={shelf.id} \n                                    onClick={() => handleSelection(shelf)}\n                                >\n                                    <ListItemIcon>\n                                        <FolderIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={shelf.name} />\n                                </ListItem>\n                            )\n                        )\n                    }\n                    <ListItem \n                        button\n                        className={clsx(classes.nested, classes.listItem)}\n                        key=\"add\"\n                        onClick={handleAddNewShelfClick}\n                    >\n                        <ListItemIcon>\n                            <AddIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"New Shelf\" />\n                    </ListItem>\n                </List>\n            </Collapse>\n        </List>\n    )\n\n}\n\nexport default SideMenu;","import { useCallback, useState } from 'react';\n\nimport {\n  Box,\n  Button,\n  Input,\n  List,\n  ListItem,\n} from '@material-ui/core';\n\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport Record from './Record';\n\nexport default function Shelf({ records, shelf, dispatch }) {\n  const shelfRecords = shelf.records.map(id =>\n    records.find(record => id === record.id),\n  );\n\n  const [renaming, setRenaming] = useState(false);\n  const [inputName, setInputName] = useState(shelf.name);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'renameShelf', id: shelf.id, name: inputName });\n    setRenaming(false);\n  }, [dispatch, inputName, shelf]);\n\n  return (\n    <>\n      <Box\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        {renaming ? (\n          <Input\n            variant=\"filled\"\n            value={inputName}\n            onChange={evt => setInputName(evt.target.value)}\n            onBlur={handleSubmit}\n            onEnter={handleSubmit}\n          />\n        ) : (\n          <h3 onClick={() => setRenaming(true)} style={{ cursor: 'pointer' }}>\n            {shelf.name}\n          </h3>\n        )}\n        <Button\n          variant=\"outlined\"\n          onClick={() => dispatch({ type: 'deleteShelf', id: shelf.id })}\n          style={{ marginLeft: '1rem' }}\n        >\n          Remove\n        </Button>\n      </Box>\n\n      <ListItem\n        key={shelf.id}\n        style={{\n          backgroundColor: '#f5f5f5',\n          minHeight: '10rem',\n          marginBottom: '1rem',\n        }}\n      >\n        <Droppable droppableId={shelf.id} direction=\"horizontal\">\n          {(provided, snapshot) => (\n            <List\n              ref={provided.innerRef}\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                overflow: 'scroll',\n              }}\n            >\n              {shelfRecords.length ? (\n                shelfRecords.map((record, index) => (\n                  <Draggable\n                    key={record.id}\n                    draggableId={record.id}\n                    index={index}\n                  >\n                    {(provided, snapshot) => (\n                      <span\n                        key={record.id}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <Record\n                          record={record}\n                          shelf={shelf}\n                          dispatch={dispatch}\n                        />\n                      </span>\n                    )}\n                  </Draggable>\n                ))\n              ) : (\n                <p>No records in shelf</p>\n              )}\n              {provided.placeholder}\n            </List>\n          )}\n        </Droppable>\n      </ListItem>\n    </>\n  );\n}\n","import { AppBar, Grid, Typography, Button, makeStyles } from '@material-ui/core';\nimport useRootContext from '../store/useRootContext';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(2)\n    },\n    userMenuButtonItem: {\n        textAlign: \"right\"\n    },\n    userMenuButton: {\n        fontSize: 10\n    }\n}));\n\n\nconst AppBarBanner = ({ title }) => {\n\n    const { layoutContext } = useRootContext();\n\n    const classes = useStyles();\n\n    const handleClick = () => {\n        layoutContext.dispatch(({\n            type: \"setChangeUserModalOpen\",\n            changeUserModalOpen: true\n        }))\n    }\n\n    return (\n        <AppBar\n            position=\"static\"\n            className={classes.root}\n        >\n            <Grid container align=\"flex-end\">\n                <Grid item xs={10}>\n                    <Typography variant=\"h5\">{title}</Typography>\n                </Grid>\n                <Grid item xs={2}\n                    className={classes.userMenuButtonItem}>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.userMenuButton}\n                        onClick={handleClick}\n                    >\n                        Change User\n                    </Button>\n                </Grid>\n            </Grid>\n        </AppBar>\n    )\n};\n\nexport default AppBarBanner;","import { useCallback, useState } from 'react';\n\nimport { Button, Input } from '@material-ui/core';\n\nexport default function Shelves({ records, shelves, dispatch }) {\n  const [adding, setAdding] = useState(false);\n  const [inputName, setInputName] = useState('');\n\n  const handleSubmit = useCallback(\n    evt => {\n      evt.preventDefault();\n      dispatch({ type: 'createShelf', name: inputName });\n      setAdding(false);\n      setInputName('');\n      return false;\n    },\n    [dispatch, inputName],\n  );\n\n  return (\n    <>\n      {adding ? (\n        <form onSubmit={handleSubmit} style={{ marginTop: '1rem' }}>\n          <Input\n            inputProps={{\n              'data-testid': 'add-shelf',\n            }}\n            variant=\"outlined\"\n            value={inputName}\n            onChange={evt => setInputName(evt.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            style={{ marginLeft: '1rem' }}\n          >\n            Submit\n          </Button>\n        </form>\n      ) : (\n        <Button variant=\"contained\" onClick={() => setAdding(true)}>\n          Add Shelf\n        </Button>\n      )}\n    </>\n  );\n}\n","\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport useRootContext from '../store/useRootContext';\nimport AddShelfForm from './AddShelfForm';\n\nexport default function AddShelfModal({records}) {\n  const { layoutContext, catalogContext } = useRootContext();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const handleClose = () => {\n    layoutContext.dispatch({\n      type: \"setAddShelfModalOpen\",\n      addShelfModalOpen: false\n    })\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={layoutContext.addShelfModalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Press the button below to add a shelf\"}</DialogTitle>\n        <DialogContent>\n          <AddShelfForm records={records} dispatch={catalogContext.dispatch} />\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Input from '@material-ui/core/Input';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport useRootContext from '../store/useRootContext';\n\nexport default function AddShelfModal() {\n  const { layoutContext, adminContext, catalogContext } = useRootContext();\n  const { dispatch: layoutDispatch } = layoutContext;\n  const { dispatch: adminDispatch } = adminContext;\n  const { dispatch: catalogDispatch } = catalogContext;\n\n  const [inputName, setInputName] = useState('');\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const handleClose = React.useCallback(() => {\n    layoutDispatch({\n      type: \"setChangeUserModalOpen\",\n      changeUserModalOpen: false\n    })\n  }, [layoutDispatch]);\n\n  const handleSubmit = React.useCallback((event) => {\n    event.preventDefault();\n\n\n    catalogDispatch({\n        type: \"resetState\"\n    });\n\n    adminDispatch({\n      type: \"setUser\",\n      user: inputName\n    });\n\n  }, [adminDispatch, inputName, catalogDispatch])\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={layoutContext.changeUserModalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Change User\"}</DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleSubmit} style={{ marginTop: '1rem' }}>\n            <Input\n              inputProps={{\n                'data-testid': 'change-user',\n              }}\n              variant=\"outlined\"\n              value={inputName}\n              onChange={evt => setInputName(evt.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              style={{ marginLeft: '1rem' }}\n            >\n              Submit\n            </Button>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\n\nimport { Container, Grid } from '@material-ui/core';\n\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport RecordsContainer from './components/RecordsContainer';\n\nimport SideMenu from './components/SideMenu';\n\nimport Shelf from './components/Shelf';\n\nimport AppBarBanner from './components/AppBarBanner';\n\nimport AddShelfModal from './components/AddShelfModal';\n\nimport ChangeUserModal from './components/ChangeUserModal';\n\nimport useRootContext from './store/useRootContext';\n\nexport default function MainPage() {\n  const [records, setRecords] = useState([]);\n  const { catalogContext, layoutContext, adminContext } = useRootContext();\n  const { shelves, dispatch } = catalogContext;\n  const{ dispatch: layoutDispatch, perPage } = layoutContext;\n  const { user } = adminContext;\n\n  const onDragEnd = useCallback(\n    result => {\n      const { source, destination } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        dispatch({\n          type: 'reorderInShelf',\n          shelfId: source.droppableId,\n          oldIndex: source.index,\n          newIndex: destination.index,\n        });\n      } else {\n        dispatch({\n          type: 'moveBetweenShelves',\n          oldShelf: source.droppableId,\n          newShelf: destination.droppableId,\n          oldIndex: source.index,\n          newIndex: destination.index,\n        });\n      }\n    },\n    [dispatch],\n  );\n\n  const handleScroll = (e) => {\n    const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\n    if (bottom) {\n      layoutContext.nextPage && fetchData(layoutContext.nextPage);\n    }\n  }\n  \n\n  // empty records when user changes\n  useEffect(() => {\n    setRecords([]);\n  }, [user])\n\n  const fetchData = useCallback((url) => {\n    fetch(\n      url\n    )\n      .then(resp => resp.json())\n      .then(json => {\n        setRecords(oldRecords => {\n          return [...oldRecords, ...json.releases.map(release => {\n            const { id, basic_information: info } = release;\n            return {\n              id: `${id}`,\n              title: info.title,\n              formats: info.formats.map(format => format.name),\n              label: info.labels?.[0]?.name ?? '',\n              artists: info.artists.map(artist => artist.name),\n              date: info.year,\n            };\n          })\n          ]\n        });\n        layoutDispatch({\n          type: \"setNextPage\",\n          nextPage: json.pagination.urls.next\n        })\n      });\n  }, [layoutDispatch]);\n\n  // initial fetch; ignoring dependencies bc only want it to run on mount\n  useEffect(() => {\n    fetchData(`https://api.discogs.com/users/${user}/collection/folders/0/releases?page=1&per_page=${perPage}`);\n  }, [fetchData, user, perPage]);\n\n\n\n  return (\n    <>\n      <AppBarBanner title=\"Record Shelves App\" />\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={3} style={{ textAlign: 'left' }}>\n            <SideMenu />\n          </Grid>\n          <Grid item xs={9}>\n            {\n              !layoutContext.sideMenuSelection ?\n                <RecordsContainer\n                  records={records}\n                  shelves={shelves}\n                  dispatch={dispatch}\n                  handleScroll={handleScroll}\n                />\n                :\n                <DragDropContext onDragEnd={onDragEnd}>\n                  {Object.values(shelves).map(shelf => (\n                    <Shelf\n                      key={shelf.id}\n                      records={records}\n                      shelf={shelf}\n                      dispatch={dispatch}\n                    />\n                  ))}\n                </DragDropContext>\n            }\n          </Grid>\n        </Grid>\n      </Container>\n      <AddShelfModal records={records} />\n      <ChangeUserModal />\n    </>\n  );\n}\n","import RootContextProvider from './store/RootContextProvider';\n\nimport MainPage from './MainPage';\n\nexport default function App() {\n\n  return (\n    <RootContextProvider>\n      <MainPage />\n    </RootContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}